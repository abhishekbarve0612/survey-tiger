{"version":3,"sources":["logo.svg","components/LandingPage.js","components/Option.js","components/Question.js","components/QuestionSelector.js","Contexts/localStoreContext.js","components/ButtonNav.js","components/CreateSurvey.js","components/TakeSurvey.js","App.js","reportWebVitals.js","index.js"],"names":["LandingPage","to","className","Option","removeNode","addOption","type","placeholder","aria-label","onClick","e","Question","qType","setQuestion","id","aria-describedby","onChange","target","value","required","htmlFor","QuestionSelector","changeQType","defaultValue","LocalStore","createContext","LocalStoreProvider","props","useState","options","question","data","setData","Provider","dataObj","children","ButtonNav","submitForm","renderButton","CreateSurvey","useContext","storedData","publishData","history","useHistory","console","log","setQType","setRenderButton","optionCount","useRef","current","parentElement","remove","showButton","publishQuestion","nodes","document","querySelectorAll","optionList","forEach","node","push","newData","uuid","parent","cloneNode","childNodes","addEventListener","append","addNew","querySelector","reset","optionsNode","firstOption","firstChild","innerHTML","cleanup","TakeSurvey","map","d","index","op","name","for","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea418488.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Link } from \"react-router-dom\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <div>\r\n      <Link\r\n        to=\"/survey-tiger/create-survey\"\r\n        className=\"btn btn-lg btn-warning p-3 m-2\"\r\n      >\r\n        Create Survey\r\n      </Link>\r\n      <Link\r\n        to=\"/survey-tiger/take-survey\"\r\n        className=\"btn btn-lg btn-warning p-3\"\r\n      >\r\n        Take Survey\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","const Option = ({ removeNode, addOption }) => {\r\n  return (\r\n    <>\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control option-input\"\r\n          placeholder=\"Enter Option\"\r\n          aria-label=\"Enter Option\"\r\n        />\r\n        <button\r\n          className=\"btn btn-outline-secondary\"\r\n          onClick={(e) => addOption(e)}\r\n          type=\"button\"\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-secondary\"\r\n          onClick={(e) => removeNode(e)}\r\n          type=\"button\"\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Option;\r\n","import { useState } from \"react\";\r\nimport Option from \"./Option\";\r\n\r\nconst Question = ({ qType, addOption, removeNode, setQuestion }) => {\r\n  if (qType != null)\r\n    return (\r\n      <div id=\"question-section\">\r\n        <div className=\"input-group mb-3\">\r\n          <span className=\"input-group-text\" id=\"basic-addon1\">\r\n            ?\r\n          </span>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Type Question\"\r\n            aria-label=\"question\"\r\n            aria-describedby=\"question\"\r\n            onChange={(e) => {\r\n              setQuestion(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n        <label htmlFor=\"options\">Option:</label>\r\n        <div className=\"options\">\r\n          <Option addOption={addOption} qType={qType} removeNode={removeNode} />\r\n        </div>\r\n      </div>\r\n    );\r\n  else return <div>Select Quesiton Type</div>;\r\n};\r\n\r\nexport default Question;\r\n","import { useState } from \"react\";\r\nimport Question from \"./Question\";\r\n\r\nconst QuestionSelector = ({ changeQType }) => {\r\n  return (\r\n    <div>\r\n      <select\r\n        className=\"form-select form-select-lg mb-3\"\r\n        aria-label=\".form-select-lg example\"\r\n        onChange={(e) => changeQType(e)}\r\n      >\r\n        <option value=\"0\" defaultValue=\"0\">\r\n          Select Quesiton Type\r\n        </option>\r\n        <option value=\"1\">Single Select</option>\r\n        <option value=\"2\">Multi Select</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionSelector;\r\n","import { createContext, useState } from \"react\";\r\n\r\nexport const LocalStore = createContext();\r\n\r\nexport const LocalStoreProvider = (props) => {\r\n  let [data, setData] = useState([\r\n    {\r\n      id: 1,\r\n      type: 1,\r\n      options: [],\r\n      question: \"\",\r\n    },\r\n  ]);\r\n  const publishData = (dataObj) => {\r\n    setData([...data, dataObj]);\r\n  };\r\n\r\n  return (\r\n    <LocalStore.Provider value={[data, publishData]}>\r\n      {props.children}\r\n    </LocalStore.Provider>\r\n  );\r\n};\r\n","const ButtonNav = ({ submitForm, renderButton }) => {\r\n  if (renderButton != 0)\r\n    return (\r\n      <div className=\"m-3\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => submitForm(true)}\r\n          className=\"btn btn-warning btn-lg m-1\"\r\n        >\r\n          Add Question\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => submitForm(false)}\r\n          className=\"btn btn-warning btn-lg m-1\"\r\n        >\r\n          Publish\r\n        </button>\r\n      </div>\r\n    );\r\n  else return <></>;\r\n};\r\n\r\nexport default ButtonNav;\r\n","import { useContext, useRef, useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport uuid from \"uuid/v1\";\r\nimport { LocalStore } from \"../Contexts/localStoreContext\";\r\nimport ButtonNav from \"./ButtonNav\";\r\nimport Question from \"./Question\";\r\nimport QuestionSelector from \"./QuestionSelector\";\r\n\r\nconst CreateSurvey = () => {\r\n  const [storedData, publishData] = useContext(LocalStore);\r\n  const history = useHistory();\r\n  console.log(storedData, publishData);\r\n  const [qType, setQType] = useState(null);\r\n  const [question, setQuestion] = useState(null);\r\n  const [renderButton, setRenderButton] = useState(false);\r\n  let optionCount = useRef(1);\r\n  const changeQType = (e) => {\r\n    setQType(e.target.value);\r\n    console.log(e.target.value, e.target.value == 0);\r\n    if (e.target.value == 0) setRenderButton(null);\r\n    setRenderButton(showButton());\r\n  };\r\n  const removeNode = (e) => {\r\n    if (optionCount.current == 1) return;\r\n    e.target.parentElement.remove();\r\n    optionCount.current -= 1;\r\n    setRenderButton(showButton());\r\n  };\r\n  const addOption = (e) => {\r\n    if (optionCount.current == 2 && qType == 1) return;\r\n    if (optionCount.current == 4 && qType == 2) return;\r\n    optionCount.current += 1;\r\n    const parent = e.target.parentElement;\r\n    const node = parent.cloneNode(true);\r\n    console.log(node);\r\n    node.childNodes[0].value = \"\";\r\n    node.childNodes[2].addEventListener(\"click\", (e) => removeNode(e));\r\n    node.childNodes[1].addEventListener(\"click\", (e) => addOption(e));\r\n    parent.parentElement.append(node);\r\n    setRenderButton(showButton());\r\n  };\r\n  const showButton = () => {\r\n    if (\r\n      (qType == 1 && optionCount.current == 2) ||\r\n      (qType == 2 && optionCount.current == 4)\r\n    )\r\n      return true;\r\n    return false;\r\n  };\r\n\r\n  const cleanup = () => {\r\n    const optionsNode = document.querySelector(\".options\");\r\n    const firstOption = optionsNode.firstChild;\r\n    optionsNode.innerHTML = \"\";\r\n    optionsNode.append(firstOption);\r\n    setQType(null);\r\n    setQuestion(null);\r\n    setRenderButton(false);\r\n    optionCount.current = 1;\r\n  };\r\n\r\n  const submitForm = (addNew) => {\r\n    publishQuestion();\r\n    const form = document.querySelector(\"#questionForm\");\r\n    form.reset();\r\n    cleanup();\r\n    if (addNew) {\r\n      history.push(\"/survey-tiger/create-survey\");\r\n    } else history.push(\"/survey-tiger/\");\r\n  };\r\n\r\n  const publishQuestion = () => {\r\n    const nodes = document.querySelectorAll(\".option-input\");\r\n    let optionList = [];\r\n    nodes.forEach((node) => {\r\n      optionList.push(node.value);\r\n    });\r\n    let newData = {\r\n      id: uuid(),\r\n      type: qType,\r\n      question: question,\r\n      options: optionList,\r\n    };\r\n    publishData(newData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form id=\"questionForm\">\r\n        <QuestionSelector changeQType={changeQType} />\r\n        <Question\r\n          addOption={addOption}\r\n          qType={qType}\r\n          setQuestion={setQuestion}\r\n          removeNode={removeNode}\r\n        />\r\n        {renderButton != 0 && (\r\n          <ButtonNav renderButton={renderButton} submitForm={submitForm} />\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateSurvey;\r\n","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LocalStore } from \"../Contexts/localStoreContext\";\r\n\r\nconst TakeSurvey = () => {\r\n  const [data] = useContext(LocalStore);\r\n  console.log(data);\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-lg-center align-content-center m-3 take-survey-form\">\r\n      {data.map((d, index) => {\r\n        return (\r\n          <div key={d.id}>\r\n            <p className=\"p-2\">{d.question}</p>\r\n            {d.type == 1 ? (\r\n              <div>\r\n                {d.options.map((op, index) => {\r\n                  return (\r\n                    <div>\r\n                      <div className=\"form-check\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name={d.id}\r\n                          id={`${op}-${d.id}`}\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          for={`${op}-${d.id}`}\r\n                        >\r\n                          {op}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {d.options.map((op, index) => {\r\n                  return (\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value={op}\r\n                        id={`${op}-${d.id}`}\r\n                      />\r\n                      <label className=\"form-check-label\" for={`${op}-${d.id}`}>\r\n                        {op}\r\n                      </label>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n      <Link className=\"btn btn-lg btn-warning m-lg-3\" to=\"/survey-tiger/\">\r\n        Submit Survey\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TakeSurvey;\r\n","import { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport LandingPage from \"./components/LandingPage\";\nimport QuestionSelector from \"./components/QuestionSelector\";\nimport CreateSurvey from \"./components/CreateSurvey\";\nimport { LocalStoreProvider } from \"./Contexts/localStoreContext\";\nimport TakeSurvey from \"./components/TakeSurvey\";\n\nfunction App() {\n  return (\n    <div className=\"App container mt-5\">\n      <LocalStoreProvider>\n        <Router>\n          <h3>\n            <Link to=\"/survey-tiger/\">Survey Tiger</Link>\n          </h3>\n          <div className=\"m-3\">\n            <Switch>\n              <Route exact path=\"/survey-tiger/\">\n                <LandingPage />\n              </Route>\n              <Route exact path=\"/survey-tiger/create-survey\">\n                <CreateSurvey />\n              </Route>\n              <Route exact path=\"/survey-tiger/take-survey\">\n                <TakeSurvey />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </LocalStoreProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}